void print(int arr[4][4],int n1,int n2);
void rotate2(int A[3][3], int n11, int n12) {
    int i,j,temp;
    for(i=0;i<n11/2;i++)
    {
        for(j=i;j<n12-i-1;j++)
       { temp = A[i][j];
         A[i][j] = A[n11-j-1][i];
         A[n11-j-1][i] =  A[n11-i-1][n11-j-1];
         A[n11-i-1][n11-j-1] =  A[j][n11-i-1];
         A[j][n11-i-1] = temp;
         print(A,3,3);
       }
       //print(A,3,3);
    }
}
void rotate(int arr[4][4],int n1, int n2)
{
    int i=0,j=0;
    for(i=0;i<n1/2;i++)
    {
        for(j=i;j<n1-i-1;j++)
        {
            int temp=arr[i][j];
            arr[i][j]=arr[n1-j-1][i];
            arr[n1-j-1][i]=arr[n1-i-1][n1-j-1];
            arr[n1-i-1][n1-j-1]=arr[j][n1-i-1];
            arr[j][n1-i-1]=temp;
            print(arr,4,4);
        }
   // print(arr,3,3);
    }

}
void rotate1(int *A[3], int n11, int n12)
{
    int c=0,d=0,n=n11,m=n11;
    /*r  = (int **)malloc(sizeof(int *) * n11);

    for (i=0; i<n11; i++)
         r[i] = (int *)malloc(n11 * sizeof(int));
    */
    int temp=0;



   for (c = 1; c < m; c++){
      for( d = 0 ; d < c ; d++ ){
      	int temp =A[d][c];
        A[d][c] = A[c][d];
      	A[c][d] = temp;
	}
}


   for (c = 0; c < n; c++){
      for( d = 0 ; d < m/2 ; d++ ){
      	int temp =A[c][d];
      	A[c][d] = A[c][m-d-1];
      	A[c][m-d-1] = temp;
	  }
   }
}
void print(int arr[4][4], int n1,int n2)
{
    printf("\n");
    int c=0,d=0,n=n1,m=n2;
   for (c = 0; c < n; c++){
      for( d = 0 ; d < m ; d++ ){
        printf("%d ",arr[c][d]);
	}
	printf("\n");
}
}
int main()
{
    int arr[4][4]={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
    print(arr,4,4);
    rotate(arr,4,4);
    printf("\nfinal array\n");
    print(arr,4,4);
}
